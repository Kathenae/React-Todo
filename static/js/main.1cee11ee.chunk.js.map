{"version":3,"sources":["App.js","serviceWorker.js","Components/Todo.jsx","Components/TodoList.jsx","index.js","logo.svg"],"names":["App","Fragment","className","src","logo","alt","Component","Boolean","window","location","hostname","match","Todo","this","renderSelf","props","data","todos","length","isExpanded","style","borderBottom","borderLeft","renderChildren","classes","doneClass","inProgressClass","isCompleted","text","completeText","getProgressStatus","onClick","onCreate","onToggle","onDelete","map","todo","key","id","checkIfCompleted","onCreateChild","onToggleChild","onDeleteChild","filter","t","TodoList","state","input","failedCreate","createTodo","newTodo","isDone","push","setState","localStorage","setItem","JSON","stringify","toggleTodo","index","indexOf","deleteTodo","newTodos","createChildren","parentTodo","toggleChildren","childTodo","deleteChildren","errorClass","type","name","onChange","e","target","value","placeholder","savedTodos","getItem","parse","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1cee11ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h1>Taskego</h1>\n          </header>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\nclass Todo extends Component{\r\n\r\n  render(){\r\n\r\n    return (\r\n      <React.Fragment>\r\n      {this.renderSelf()}\r\n        {(this.props.data.todos.length > 0 && this.props.data.isExpanded) && \r\n\r\n        <div className=\"ml-4 mb-3 pb-3 pl-3 ml-3\" style={{borderBottom : \"1px solid black\", borderLeft : \"1px solid black\"}}>\r\n          {this.renderChildren()} \r\n        </div>\r\n\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  renderSelf(){\r\n\r\n    let classes = \"btn btn-block btn-\"\r\n    const doneClass = this.props.data.todos.length > 0? \"outline-success\" : \"success\";\r\n    const inProgressClass = this.props.data.todos.length > 0 ? \"outline-dark\" : \"outline-primary\";\r\n    classes += this.props.isCompleted()? doneClass : inProgressClass;\r\n\r\n    let text = this.props.data.text;\r\n    let completeText = this.props.data.todos.length > 0? \" (Finished)\" : \" (Done)\"\r\n    text += this.props.isCompleted()? completeText : this.getProgressStatus();\r\n\r\n    return (\r\n      <div className=\"m-2 form-inline input-group\">\r\n\r\n        <div className=\"input-group-append\">\r\n          <button className=\"btn btn-outline-primary\" onClick={this.props.onCreate}>+</button>\r\n        </div>\r\n\r\n        <button \r\n          className={classes + \" form-control\"} \r\n          onClick={this.props.onToggle}\r\n        >\r\n          {text}\r\n        </button>\r\n        <div className=\"input-group-append\">\r\n          < button className=\"btn btn-outline-danger\" onClick={this.props.onDelete}>X</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderChildren()\r\n  {\r\n    const {todos} = this.props.data;\r\n\r\n    return (todos.map(todo => <Todo \r\n      key={todo.id} \r\n      data={todo}\r\n      isCompleted={() => this.props.checkIfCompleted(todo)}\r\n      onCreate={() => this.props.onCreateChild(todo)}\r\n      onToggle={() => this.props.onToggleChild(this.props.data, todo)} \r\n      onDelete={() => this.props.onDeleteChild(this.props.data,todo)}\r\n      onCreateChild={this.props.onCreateChild}\r\n      onToggleChild={this.props.onToggleChild} \r\n      onDeleteChild={this.props.onDeleteChild}\r\n      checkIfCompleted={this.props.checkIfCompleted}\r\n    />) );\r\n\r\n  }\r\n\r\n  getProgressStatus(){\r\n    const {todos} = this.props.data;\r\n    \r\n    if(todos.length > 0)\r\n    {\r\n      return \" (\" + todos.filter(t => this.props.checkIfCompleted(t)).length + \"/\" + todos.length + \")\";\r\n    }\r\n\r\n    return \"\";\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport Todo from './Todo.jsx'\r\n\r\nclass TodoList extends Component{\r\n\r\n  state = {\r\n    input : \"\",\r\n    failedCreate : false,\r\n    todos : []\r\n  }\r\n\r\n  render(){\r\n\r\n    const placeHolder = \"Ex: Watch Black Clover\";\r\n    const errorClass = this.state.failedCreate? \"is-invalid\" : \"\";\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n\r\n          <div className=\"input-group\">\r\n            <input type=\"text\" name=\"\" onChange={ (e) => { this.setState({input : e.target.value}) } } value={this.state.input} className={\"form-control \" + errorClass } placeholder={placeHolder}/>\r\n            <div className=\"input-group-append\">\r\n              <button className=\"btn btn-outline-primary\" onClick={this.createTodo}>Add</button>\r\n            </div>\r\n          </div>\r\n          {this.state.failedCreate && <small><p className=\"ml-4 text-muted\">Write the name of the task in the field above.</p></small>}\r\n\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {this.state.todos.map( todo => <Todo \r\n              key={todo.id} \r\n              data={todo} \r\n              isCompleted={() => this.checkIfCompleted(todo)}\r\n              onCreate={() => this.createChildren(todo)}\r\n              onToggle={() => this.toggleTodo(todo)} \r\n              onDelete={() => this.deleteTodo(todo)}\r\n              onToggleChild={this.toggleChildren}\r\n              onCreateChild={this.createChildren}\r\n              onDeleteChild={this.deleteChildren}\r\n              checkIfCompleted={this.checkIfCompleted}\r\n            /> \r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount(){\r\n    const savedTodos = localStorage.getItem(\"todos\");\r\n    if(savedTodos){\r\n      this.setState({todos:JSON.parse(savedTodos) })\r\n    }\r\n  }\r\n\r\n  createTodo = () => {\r\n    \r\n    if(this.state.input === \"\"){\r\n      this.setState({failedCreate : true});\r\n      return;\r\n    }\r\n\r\n    const todos = [...this.state.todos];\r\n    const newTodo = {\r\n      id : todos.length,\r\n      text : this.state.input,\r\n      isDone : false,\r\n      isExpanded : true,\r\n      todos : [],\r\n    }\r\n\r\n    todos.push(newTodo);\r\n    this.setState({todos});\r\n    this.setState({input : \"\"})\r\n    this.setState({failedCreate : false});\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n  }\r\n  \r\n  toggleTodo = (todo) => {\r\n    let todos = [...this.state.todos];\r\n    const index = todos.indexOf(todo);\r\n\r\n    if(todos[index].todos.length > 0)\r\n    {\r\n      todos[index].isExpanded = !todos[index].isExpanded;\r\n    }\r\n    else{\r\n      todos[index].isDone = !todos[index].isDone;\r\n    }\r\n\r\n    this.setState({todos});\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n  }\r\n\r\n  deleteTodo = (todo) =>{\r\n    let newTodos = [...this.state.todos];\r\n    newTodos = newTodos.filter(t => t !== todo);\r\n    this.setState({todos : newTodos});\r\n    localStorage.setItem(\"todos\", JSON.stringify(newTodos));\r\n  }\r\n\r\n  createChildren = (parentTodo) =>{\r\n\r\n    if(this.state.input === \"\"){\r\n      this.setState({failedCreate : true});\r\n      return;\r\n    }\r\n\r\n    const todos = [...parentTodo.todos];\r\n\r\n    const newTodo = {\r\n      id : todos.length,\r\n      text : this.state.input,\r\n      isDone : false,\r\n      isExpanded : true,\r\n      todos : [],\r\n      isCompleted : this.checkIfCompleted\r\n    }\r\n\r\n    todos.push(newTodo);\r\n    parentTodo.todos = todos;\r\n\r\n    this.setState({todos : this.state.todos});\r\n    this.setState({input : \"\"})\r\n    this.setState({failedCreate : false});\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n    // console.log(\"Create on children\");\r\n\r\n  }\r\n\r\n  toggleChildren = (parentTodo, childTodo) =>{\r\n    const todos = [...parentTodo.todos];\r\n    const index = todos.indexOf(childTodo);\r\n\r\n    if(todos[index].todos.length > 0)\r\n    {\r\n      todos[index].isExpanded = !todos[index].isExpanded;\r\n    }\r\n    else{\r\n      todos[index].isDone = !todos[index].isDone;\r\n    }\r\n\r\n    this.setState({todos : this.state.todos});\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n    // console.log(\"Toggle on children\");\r\n\r\n  }\r\n\r\n  deleteChildren = (parentTodo, childTodo) =>{\r\n    let todos = [...parentTodo.todos];\r\n    parentTodo.todos = todos.filter(t => t !== childTodo);\r\n    this.setState({todos : this.state.todos});\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\r\n    // console.log(\"Delete on children\");\r\n  }\r\n\r\n  checkIfCompleted = (todo) => {\r\n\r\n    if(todo.todos.length > 0){\r\n      return todo.todos.filter(t => this.checkIfCompleted(t)).length === todo.todos.length;\r\n    }\r\n\r\n    return todo.isDone;\r\n  }\r\n\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport TodoList from './Components/TodoList.jsx'\n\nReactDOM.render(<App />, document.getElementById('banner'));\nReactDOM.render(<TodoList />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}